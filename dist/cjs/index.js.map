{"version":3,"sources":["../../src/index.js"],"names":["TRUE","FALSE","NULL","UNDEFINED","coerce","collection","obj","push","constructor","name","valueOf","Buffer","from","i","length","objectKeys","Object","keys","sort","mapKeys","get","setValues","map","hashObject","unknownKeys","toString","JSON","stringify","hash32","o","hash64"],"mappings":";;;;;;;;AAEA;;AAEA,MAAMA,IAAI,GAAG,MAAb;AACA,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,IAAI,GAAG,MAAb;AACA,MAAMC,SAAS,GAAG,WAAlB;;AAEA,SAASC,MAAT,CAAgBC,UAAhB,EAAuCC,GAAvC,EAAiD;AAC/C,UAAQ,OAAOA,GAAf;AACE,SAAK,QAAL;AACA,SAAK,SAAL;AACA,SAAK,WAAL;AACA,SAAK,QAAL;AACED,MAAAA,UAAU,CAACE,IAAX,CAAgBD,GAAhB;AACA;;AACF;AACE;AARJ;;AAUA,MAAIA,GAAG,KAAK,IAAZ,EAAkB;AAChBD,IAAAA,UAAU,CAACE,IAAX,CAAgB,IAAhB;AACA;AACD;;AACD,UAAQD,GAAG,CAACE,WAAJ,IAAmBF,GAAG,CAACE,WAAJ,CAAgBC,IAA3C;AACE,SAAK,MAAL;AACEJ,MAAAA,UAAU,CAACE,IAAX,CAAgBD,GAAhB;AACA;;AACF,SAAK,QAAL;AACED,MAAAA,UAAU,CAACE,IAAX,CAAgBD,GAAG,CAACI,OAAJ,EAAhB;AACA;;AACF,SAAK,QAAL;AACEL,MAAAA,UAAU,CAACE,IAAX,CAAgBD,GAAG,CAACI,OAAJ,EAAhB;AACA;;AACF,SAAK,SAAL;AACEL,MAAAA,UAAU,CAACE,IAAX,CAAgBD,GAAG,CAACI,OAAJ,EAAhB;AACA;;AACF,SAAK,aAAL;AACA,SAAK,WAAL;AACA,SAAK,YAAL;AACA,SAAK,mBAAL;AACA,SAAK,YAAL;AACA,SAAK,aAAL;AACA,SAAK,YAAL;AACA,SAAK,aAAL;AACA,SAAK,cAAL;AACA,SAAK,cAAL;AACEL,MAAAA,UAAU,CAACE,IAAX,CAAgB,sBAAWI,MAAM,CAACC,IAAP,CAAYN,GAAZ,CAAX,CAAhB;AACA;;AACF,SAAK,QAAL;AACED,MAAAA,UAAU,CAACE,IAAX,CAAgB,sBAAWD,GAAX,CAAhB;AACA;;AACF,SAAK,OAAL;AACE,WAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,GAAG,CAACQ,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnCT,QAAAA,MAAM,CAACC,UAAD,EAAaC,GAAG,CAACO,CAAD,CAAhB,CAAN;AACD;;AACD;;AACF,SAAK,QAAL;AACE,YAAME,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYX,GAAZ,CAAnB,CADF,CACuC;;AACrCS,MAAAA,UAAU,CAACG,IAAX;;AACA,WAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,UAAU,CAACD,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1CR,QAAAA,UAAU,CAACE,IAAX,CAAgBQ,UAAU,CAACF,CAAD,CAA1B;AACAT,QAAAA,MAAM,CAACC,UAAD,EAAaC,GAAG,CAACS,UAAU,CAACF,CAAD,CAAX,CAAhB,CAAN;AACD;;AACD;;AACF,SAAK,KAAL;AACE,YAAMM,OAAO,GAAG,CAAC,GAAGb,GAAG,CAACW,IAAJ,EAAJ,CAAhB,CADF,CACmC;;AACjCE,MAAAA,OAAO,CAACD,IAAR;;AACA,WAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,OAAO,CAACL,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCT,QAAAA,MAAM,CAACC,UAAD,EAAac,OAAO,CAACN,CAAD,CAApB,CAAN;AACAT,QAAAA,MAAM,CAACC,UAAD,EAAaC,GAAG,CAACc,GAAJ,CAAQD,OAAO,CAACN,CAAD,CAAf,CAAb,CAAN;AACD;;AACD;;AACF,SAAK,KAAL;AACE,YAAMQ,SAAS,GAAG,CAAC,GAAGf,GAAJ,EAASgB,GAAT,CAAaC,UAAb,CAAlB,CADF,CAC8C;;AAC5CF,MAAAA,SAAS,CAACH,IAAV;;AACA,WAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,SAAS,CAACP,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzCR,QAAAA,UAAU,CAACE,IAAX,CAAgBc,SAAS,CAACR,CAAD,CAAzB;AACD;;AACD;;AACF;AACER,MAAAA,UAAU,CAACE,IAAX,CAAgBD,GAAG,CAACE,WAAJ,IAAmBF,GAAG,CAACE,WAAJ,CAAgBC,IAAnD;AACA,YAAMe,WAAW,GAAGR,MAAM,CAACC,IAAP,CAAYX,GAAZ,CAApB,CAFF,CAEwC;;AACtCkB,MAAAA,WAAW,CAACN,IAAZ;;AACA,WAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,WAAW,CAACV,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3CR,QAAAA,UAAU,CAACE,IAAX,CAAgBiB,WAAW,CAACX,CAAD,CAA3B;AACAT,QAAAA,MAAM,CAACC,UAAD,EAAaC,GAAG,CAACkB,WAAW,CAACX,CAAD,CAAZ,CAAhB,CAAN;AACD;;AA/DL;AAiED;;AAED,SAASU,UAAT,CAAoBjB,GAApB,EAA8B;AAC5B,UAAQ,OAAOA,GAAf;AACE,SAAK,QAAL;AACE,aAAOA,GAAG,CAACmB,QAAJ,EAAP;;AACF,SAAK,SAAL;AACE,aAAOnB,GAAG,GAAGN,IAAH,GAAUC,KAApB;;AACF,SAAK,WAAL;AACE,aAAOE,SAAP;;AACF,SAAK,QAAL;AACE,aAAOG,GAAP;;AACF;AACE;AAVJ;;AAYA,MAAIA,GAAG,KAAK,IAAZ,EAAkB;AAChB,WAAOJ,IAAP;AACD;;AACD,QAAMG,UAAU,GAAG,EAAnB;AACAD,EAAAA,MAAM,CAACC,UAAD,EAAaC,GAAb,CAAN;AACA,SAAOoB,IAAI,CAACC,SAAL,CAAetB,UAAf,CAAP;AACD;;AAEM,SAASuB,MAAT,CAAgBC,CAAhB,EAAuB;AAC5B,SAAO,sBAAWN,UAAU,CAACM,CAAD,CAArB,CAAP;AACD;;AAEM,SAASC,MAAT,CAAgBD,CAAhB,EAAuB;AAC5B,SAAO,sBAAWN,UAAU,CAACM,CAAD,CAArB,CAAP;AACD","sourcesContent":["// @flow\n\nimport { hash64 as farmhash64, hash32 as farmhash32 } from 'farmhash';\n\nconst TRUE = 'TRUE';\nconst FALSE = 'FALSE';\nconst NULL = 'NULL';\nconst UNDEFINED = 'UNDEFINED';\n\nfunction coerce(collection:Array<any>, obj: any) {\n  switch (typeof obj) {\n    case 'number':\n    case 'boolean':\n    case 'undefined':\n    case 'string':\n      collection.push(obj);\n      return;\n    default:\n      break;\n  }\n  if (obj === null) {\n    collection.push(null);\n    return;\n  }\n  switch (obj.constructor && obj.constructor.name) {\n    case 'Date':\n      collection.push(obj);\n      return;\n    case 'String':\n      collection.push(obj.valueOf());\n      return;\n    case 'Number':\n      collection.push(obj.valueOf());\n      return;\n    case 'Boolean':\n      collection.push(obj.valueOf());\n      return;\n    case 'ArrayBuffer':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n      collection.push(farmhash64(Buffer.from(obj)));\n      return;\n    case 'Buffer':\n      collection.push(farmhash64(obj));\n      return;\n    case 'Array':\n      for (let i = 0; i < obj.length; i++) {\n        coerce(collection, obj[i]);\n      }\n      return;\n    case 'Object':\n      const objectKeys = Object.keys(obj); // eslint-disable-line no-case-declarations\n      objectKeys.sort();\n      for (let i = 0; i < objectKeys.length; i++) {\n        collection.push(objectKeys[i]);\n        coerce(collection, obj[objectKeys[i]]);\n      }\n      return;\n    case 'Map':\n      const mapKeys = [...obj.keys()]; // eslint-disable-line no-case-declarations\n      mapKeys.sort();\n      for (let i = 0; i < mapKeys.length; i++) {\n        coerce(collection, mapKeys[i]);\n        coerce(collection, obj.get(mapKeys[i]));\n      }\n      return;\n    case 'Set':\n      const setValues = [...obj].map(hashObject); // eslint-disable-line no-case-declarations\n      setValues.sort();\n      for (let i = 0; i < setValues.length; i++) {\n        collection.push(setValues[i]);\n      }\n      return;\n    default:\n      collection.push(obj.constructor && obj.constructor.name);\n      const unknownKeys = Object.keys(obj); // eslint-disable-line no-case-declarations\n      unknownKeys.sort();\n      for (let i = 0; i < unknownKeys.length; i++) {\n        collection.push(unknownKeys[i]);\n        coerce(collection, obj[unknownKeys[i]]);\n      }\n  }\n}\n\nfunction hashObject(obj: any) {\n  switch (typeof obj) {\n    case 'number':\n      return obj.toString();\n    case 'boolean':\n      return obj ? TRUE : FALSE;\n    case 'undefined':\n      return UNDEFINED;\n    case 'string':\n      return obj;\n    default:\n      break;\n  }\n  if (obj === null) {\n    return NULL;\n  }\n  const collection = [];\n  coerce(collection, obj);\n  return JSON.stringify(collection);\n}\n\nexport function hash32(o:any) {\n  return farmhash32(hashObject(o));\n}\n\nexport function hash64(o:any) {\n  return farmhash64(hashObject(o));\n}\n"],"file":"index.js"}